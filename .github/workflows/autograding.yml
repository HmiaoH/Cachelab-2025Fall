name: GitHub Classroom Workflow

on: 
  push:
    branches: [ main, dev-* ]
  pull_request:
    branches: [ main ]

permissions:
  checks: write
  actions: read
  contents: read

jobs:
  build:
    name: Autograding
    runs-on: ubuntu-latest
    if: github.actor != 'github-classroom[bot]'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc g++ make python3 python3-pip bc
          
      - name: Setup environment
        run: |
          gcc --version
          g++ --version
          python3 --version

      - name: Compilation
        run: |
          echo "Compiling project..."
          make clean
          make all
          if [ $? -ne 0 ]; then
            echo "✗ Compilation failed"
            exit 1
          fi
          echo "✓ Compilation successful"

      - name: Cache Simulator Tests
        id: cache-tests
        run: |
          echo "Testing cache simulator with Python test suite..."

          # Run the comprehensive Python test
          cd test
          python3 csim_test2.py

          # Read the score from the result file
          if [ -f ".autograder_result" ]; then
            score=$(cat .autograder_result)
            # Linear scoring: direct use of 0-100 score
            echo "Cache simulator score: $score"
            echo "points=$score" >> $GITHUB_OUTPUT

            echo "⚠ Cache simulator tests completed with ${score} points"
          else
            echo "✗ Test result file not found"
            echo "points=0" >> $GITHUB_OUTPUT
          fi


      - name: Calculate Final Score
        run: |
          cache_points="${{ steps.cache-tests.outputs.points || 0 }}"

          echo "=== AUTOGRADING RESULTS ==="
          echo "Cache Simulator: $cache_points/100"
          echo "=========================="
          echo "FINAL SCORE: $cache_points/100"
          echo "=========================="

          if [ $(echo "$cache_points >= 100" | bc -l) -eq 1 ]; then
            echo "🎉 PASSED - Score: $cache_points/100"
          else
            echo "❌ FAILED - Score: $cache_points/100"
            exit 1
          fi